The writeUp for the first Project submission

1. Its my first time running code through Jupyter Notebooks and seem to be very interesting. Finally, I'm able to run them using the correct version of the python.

For the training practice
1. Add functions to detect obstacle and golden rocks.
2. Fill the `process_image` function 

**To fill the process_image() function**

I'll have to find the coordinates of:

- Navigable terrain (already done in the exercise)
 
- Obstacles (this seems to be the inverse of navigable terrain )
 
- Golden rocks : This seems to be main task as of now. As suggested, we can define a upper and lower color threshold to the possible RGB value range to the golden sample rock.

1. Find the possible RGB range of the golden samples using the interactive matplotlib window. Done.

The `data` object exposes the saved data **globally** than can be referred to by `process_image.` 

`output_image` refers to 1 frame of the video.
Using the example code, every frame will contain 4 mosaics of image manipulations.

Finally, able to get good enough results in the `process_image` function. Still couldn't see the green portion maybe because the world map was also green. I'll try this in auto mode, to see good it does there.

----- decisions.py

To better the performance in terms of time, increase the allowed maximum velocity and throttle set

self.throttle_set = 0.8
self.max_vel = 2 

To pick up the sample rock, 

add new variables in the Rover class.

like rock\_angle,rock\_dist



For wall following:
1. Use the nav_angles.
	Take an offset to the nav_angles
2. Use the obstacle_angles
	* disadvantages
		1. obstacle is always symmetrical. Mean comes center into the obstacle.







